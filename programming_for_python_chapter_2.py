"""
Напишите программу сокращения ФИО с полной формы до короткой с инициалами.
Входные данные
Вводится три строки Фамилия Имя Отчество - каждая на отдельной строке.
Выходные данные
Вывести одну строку.
"""
f = input()
n = input()
sn = input()
print(f'{f} {n[0]}.{sn[0]}.')

"""
Напишите программу для создания аббревиатур.
Входные данные
Вводится число N - количество строк будущей аббревиатуры, 
затем вводятся сами строки - каждая на отдельной строке.
Выходные данные
Вывести одну строку.
"""
num = int(input())
b = []
for i in range(0,num):
    a = input()
    b.append(a[0])
print(''.join(str(i) for i in b))

"""
Напишите программу для вывода строки задом наперед.
"""
stroka = input()
print(stroka[::-1])

"""
Напишите программу поиска и замены в строке одного символа на другой.
Входные данные
Вводится строка и два символа - на отдельных строках.
Выходные данные
Выводится одну строку, с выполненной заменой.
"""
stroka = input()
a_1 = input()
b_1 = input()
if a_1 in stroka:
    print(stroka.replace(a_1, b_1))

"""
Напишите программу которая выводит коды всех символов строки (ASCII)
"""
stroka = input()
for i in stroka:
    print(ord(i)) # Получить код символа можно получить с помощью функции ord()

"""
Напишите программу которая выводить строку по кодам символов.
"""
num = int(input())
b = []
for i in range(0,num):
    a = int(input())
    b.append(chr(a)) # Получить символ по его коду можно с помощью функции chr().
print(''.join(str(i) for i in b))

"""
Напишите программу которая выводит русский алфавит без ё от буквы до буквы.
"""
a = ord('а')
print(''.join([chr(i) for i in range(a,a+32)]))
"""
Напишите программу которая выводит русский алфавит с ё от буквы до буквы.
"""
a = ord('а')
print(''.join([chr(i) for i in range(a,a+6)] + [chr(a+33)] + [chr(i) for i in range(a+6,a+32)]))

"""
Напишите программу, которая будет сокращать длинное предложение 
и добавлять '...', если его длина больше допустимого.
Входные данные
Вводится строка, затем максимально допустимая длина - на отдельных строках.
Выходные данные
Вывести сокращенное предложение или оставить без изменений.
"""
stroka = input()
max_line = int(input())
replace = '...'
if len(stroka) > max_line:
    new_stroka = stroka[0:max_line+1].rstrip() # удаляется пробел в конце строки
    print(f'{new_stroka}{replace}')
else:
    print(stroka)

"""
Напишите программу, которая убирает частицу 'Не' в начале строк.
Входные данные
Вводится число N - количество строк, затем сами строки - каждая на отдельной строке.
Выходные данные
Вывести строки без 'Не'.
"""
N = int(input())

for i in range(N):
    stroka = input()
    if stroka.startswith('Не ') or stroka.startswith('не '):
        print(stroka[3:].capitalize()) # первая буква меняется на заглавную
    else:
        print(stroka)

"""-------------------------"""
my_list = []

# Вывод символов строки в обраном порядке
s = 'Hello, world!'
for char in s[::-1]:
    print(char)

# Вывод символов строки в обраном порядке по их индексам
for index in range(len(s), -1, -1):
    print(s[index])
"""-------------------------"""

"""
Вывести количество слов в строке.
"""
stroka = input()
new_stroka = stroka.split(" ")
print(len(new_stroka))

"""
Напишите программу для заполнения списка значениями введенными с клавиатуры.
Входные данные
Вводится число N - количество строк, затем вводятся сами 
строки - каждая на отдельной строке.
Выходные данные
Вывести все введенные строки в одну строку через пробел.
"""
N = int(input())
a = []
for i in range(N):
    a.append(input())
print(' '.join(str(i) for i in a))

"""
Напишите программу для заполнения списка значениями введенными с клавиатуры.
Входные данные
Вводится число N - количество строк, затем вводятся 
сами строки - каждая на отдельной строке.
Выходные данные
Вывести все введенные строк в одну строку через пробел в обратном порядке.
"""
N = int(input())
a = []
for i in range(N):
    a.append(input())

a_1 = a[::-1]
print(' '.join(str(i) for i in a_1))

N = int(input())
a = []
for i in range(N):
    a.append(input())
a.reverse()
print(' '.join(str(i) for i in a))

"""
Напишите программу которая будет выводить значения введенные с клавиатуры умноженные на 2.
Входные данные
Вводится число N - количество чисел, затем вводятся сами числа - каждое на отдельной строке.
Выходные данные
Вывести все введенные числа умноженные на 2 в одну строку через пробел.
"""
N = int(input())
a = []

for i in range(N):
    a.append(int(input()) * 2)

print(' '.join(str(i) for i in a))

"""
Напишите программу, которая запоминает поисковые запросы пользователя и напоминает, 
если такой поисковый запрос уже был.
В памяти поисковика уже есть 3 запроса:
Все новые запросы также попадают в память поисковика.
Входные данные
Вводится количество запросов, затем сами эти запросы, каждый на отдельной строке.
Выходные данные
Выводится "Вы уже искали это" или "Ок" для каждого запроса.
"""
memory = ['как сделать торт из конфет', 'столица Австралии', 'майнкрафт скачать бесплатно без смс']
count_inquiry = int(input())

for i in range(count_inquiry):
    i = input()
    if i in memory:
        print('Вы уже искали это')
    else:
        memory.append(i)
        print('Ок')

"""
Напишите программу для заполнения списка значениями введенными 
с клавиатуры и вывода необходимых строк.
Входные данные
Вводится число N - количество строк, затем вводятся сами строки - каждое на отдельной строке.
Вводится число K - количество индексов, затем вводятся сами 
индексы - каждый на отдельной строке.
Выходные данные
Вывести все введенные строки с нужными индексами в одну строку через пробел.
"""
N = int(input())
a = []

for i in range(N):
    a.append(input())

K = int(input())
b = []
for i in range(K):
    i = int(input())
    b.append(a[i])
print(' '.join(str(i) for i in b))

"""
Напишите программу для вывода каждого второго слова строки.
Входные данные
Вводится строка из нескольких слов.
Выходные данные
Вывести строку из каждого второго слова, разделитель пробел.
"""
stroka = input()
stroka = stroka.split()
b = len(stroka)
a = []
for i in stroka[0:b:2]:
    a.append(i)
print(' '.join(str(i) for i in a))

"""
Напишите программу для подсчета часов, минут, секунд.
Входные данные
Вводится строка вида hh:mm:ss
Выходные данные
Вывести 3 строки.
С начала суток прошло всего часов: {число часов}
С начала суток прошло всего минут: {число минут}
С начала суток прошло всего секунд: {число секунд}
"""
stroka_time = input()
spisok_time = stroka_time.split(':')
time_hour = int(spisok_time[0])
time_min = int(int(time_hour)*60) + int(spisok_time[1])
time_sec = int(time_min*60) + int(spisok_time[2])

print(f'С начала суток прошло всего часов: {time_hour}')
print(f'С начала суток прошло всего минут: {time_min}')
print(f'С начала суток прошло всего секунд: {time_sec}'
      
"""
Используя списочное выражение выведите последовательность 
 нечетных чисел от 1 до числа N включительно.
Входные данные
Вводится число N.
Выходные данные
Вывести последовательность, разделитель пробел.
"""
N= int(input())
a = [i for i in range(N+1) if i % 2 != 0]
print(' '.join(str(i) for i in a))

"""
Используя списочное выражение выведите последовательность кубов всех 
нечетных чисел от 1 до числа N включительно.
Входные данные
Вводится число N.
Выходные данные
Вывести последовательность, разделитель пробел.
"""
N = int(input())
a = [i**3 for i in range(N+1) if i % 2 != 0]
print(' '.join(str(i) for i in a))

"""
Используя списочное выражение выведите все только нечетные числа из тех, которые ввел пользователь.
Входные данные
Вводится последовательность чисел на одной строке - разделитель пробел.
Выходные данные
Вывести последовательность, разделитель пробел.
"""
lst = [int(s) for s in input().split()]
a = [i for i in lst if i % 2 != 0]
print(' '.join(str(i) for i in a))

"""
Напишите программу для вывода максимума, минимума, суммы чисел.
Входные данные
Вводится строка из пяти чисел.
Выходные данные
Вывести максимум, минимум, сумму чисел.
"""
lst = [int(s) for s in input().split()]
print(max(lst), min(lst), sum(lst))

"""
С клавиатуры вводятся 2 строки.
Первая, что заменить, вторая текст, в котором надо заменить.
Выходные данные
Вывести строку и вывести число - сколько было выполнено замен на новой строке.
"""
zamena = input()
stroka = input()
template = 'тот кого нельзя называть'
print(stroka.replace(zamena, template))
print(stroka.count(zamena))

'''
Напишите программу, которая будет писать Фамилию Имя Отчество с большой буквы.
Входные данные
С клавиатуры вводится строка фамилия имя отчество.
Выходные данные
Вывести строку Фамилия Имя Отчество.
'''
fio = input()
print(fio.title())

"""
Напишите программу, которая будет разбивать предложение на 
отдельные слова (разделитель пробел).
Входные данные
Вводится строка. 
Выходные данные
Вывести отдельные слова - каждое на новой строке.
Примечание
Знаки препинания необходимо удалять. 
"""
stroka = input()
word = ''
for i in stroka:
    if i.isalpha():
        word += i
    else:
        if word:
            print(word)
            word = ''

stroka = input()
for char in stroka:
    if char == ' ':
        print()
    elif char not in '!.,():;?':
        print(char, end='')

"""
После получения всех годовых оценок, вы решили написать программу, 
для анализа своей успеваемости.
Напишите программу для вывода всех своих оценок в порядке возрастания и 
количество лучших оценок.
Входные данные
Вводится строка из чисел - разделитель пробел.
Выходные данные
Вывести числа в порядке возрастания через пробел и количество 
наибольших чисел на новой строке.
"""
lst = [int(s) for s in input().split()]
a = []
for i in lst:
    a.append(i)
a.sort()
print(' '.join(str(i) for i in a))
print(lst.count(max(lst)))

"""
Напишите программу которая находит количество различных элементов 
в упорядоченной последовательности чисел.
Входные данные
Вводится число N - количество чисел, затем вводятся сами числа - каждое на отдельной строке.
Выходные данные
Вывести количество различных элементов последовательности и 
сами различные элементы последовательности - каждое число на отдельной строке.
Примечание
В этой задаче нельзя использовать встроенные функции.
"""
N = int(input())
a = []
for i in range(N):
    a.append(input())
a_1 = list(set(a))
a_1.sort()
print(len(a_1))
for i in a_1:
    print(i)

"""
Напишите программу для вывода среза списка.
Входные данные
Вводится число N - количество строк, затем вводятся сами строки - каждая на отдельной строке.
Затем вводится 3 числа, индекс начала среза, индекс конца среза и шаг - 
каждое на отдельной строке.
Выходные данные
Вывести срез на одной строке строке через пробел.
"""
N = int(input())
a = []

for i in range(N):
    b = input()
    a.append(b)

c = int(input())
d = int(input())
e = int(input())
print(' '.join(str(i) for i in a[c:d:e]))

"""
Напишите программу для вывода срезов двух списков.
Входные данные
Вводится число N - количество строк, затем вводятся сами строки - каждая на отдельной строке.
Затем вводится 6 числа, индекс начала первого среза, индекс 
конца первого среза и шаг первого среза, затем индекс начала 
второго среза, индекс конца второго среза и шаг второго среза - каждое на отдельной строке.
Выходные данные
Вывести срез, полученный путем сложения двух срезов на одной строке строке через пробел. 
"""
n = int(input())
a = []
for i in range(n):
    b = input()
    a.append(b)
c, d, e, f, j, h = [int(input()) for i in range(6)]
srez = a[c:d:e] + a[f:j:h]
print(' '.join(i for i in srez))

"""
Напишите программу для подсчета количества городов, которые посетил 
турист во время путешествия.
Входные данные
Вводится строка с городами через пробел.
Выходные данные
Вывести количество городов, которые посетил турист во время путешествия.
"""
print(len(set(input().split())))

"""
Даны два списка чисел. Посчитайте, сколько чисел содержится одновременно 
как в первом списке, так и во втором.
Входные данные
Вводится две строки чисел через пробел.
Выходные данные
Вывести сколько чисел содержится одновременно в первом и втором списке.
"""
set_1 = set(input().split())
set_2 = set(input().split())
print(len(set_1.intersection(set_2)))

print(len((set(input().split())).intersection(set(input().split()))))

"""
Дана строка с названиями цветов. Сколько из названий цветов являются цветами радуги. 
Входные данные
Вводится строка с названиями цветов. Цвета могут вводиться как заглавными 
так и строчными буквами. Гарантируется что название цвета состоит только из одного слова.
Выходные данные
Вывести одно число - сколько из названий цветов являются цветами радуги.
Примечание
Цвета могут вводиться как заглавными так и строчными буквами. 
Букву е и ё считать одинаковыми. Гарантируется, что название цвета состоит 
только из одного слова. Список цветов радуги смотреть тут.
"""
rainbow_pattern = {'красный', 'оранжевый', 'желтый', 'зеленый', 'голубой', 'синий', 'фиолетовый'}
rainbow = input().lower().replace('ё', 'е').split()
rainbow_intersection = set()
for i in rainbow:
    if i in rainbow_pattern:
        rainbow_intersection.add(i)

print(len(rainbow_intersection))

"""
Напишите программу, которая проверяет, правильно ли введен логин пользователя.
Логин может содержать только английские буквы и цифры и быть длиной не менее 6 символов. 
Если длина логина меньше 6 то выводится сообщение "Слишком короткий", 
если в логине есть лишние символы, то вывести сообщение "Неверный символ: и 
первый лишний символ". Если логин верный ты выводится "OK".
Входные данные
Вводится строка с логином
Выходные данные
Выводится строка с сообщением.
"""
login = str(input())
template = "1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM"
value = 0

if len(login) < 6:
    value = 1

elif len(login) >= 6:
    for i in range(len(login)):
        if not login[i] in template:
            value = 2
            break
        else:
            value = 3

if value == 1:
    print('Слишком короткий')
elif value == 2:
    print('Неверный символ:', login[i])
elif value == 3:
    print('OK')

"""
Написать программу для проверки ранее использованных паролей.
Ранее использовались пароли: 
123456
йцукен
qwerty
Входные данные
Вводится одно целое число N - количество паролей.
Затем вводятся сами пароли - каждый на отдельной строке.
Выходные данные
Вывести все пароли и для каждого через двоеточие вывести "OK" или "password is not correct".
"""
old_logins = ['123456', 'йцукен', 'qwerty']
N = int(input())
login = [input() for i in range(N)]
for i in login:
    if i in old_logins:
        print(f'{i}: password is not correct')
    else:
        print(f'{i}: OK')
        old_logins.append(i)

"""
Дан список городов посещенных туристом. Для каждого города выведите, был ли он раньше в нем или нет.

Входные данные
Вводится список городов через пробел.
Выходные данные
Вывести был или не был для каждого города в одну строку через пробел.
"""
spisok_town = input().split()
spisok_new = []
answer = []
for i in spisok_town:
    if i not in spisok_new:
        spisok_new.append(i)
        answer.append('не был')
    else:
        answer.append('был')
print(' '.join(str(i) for i in answer))

"""
Дан список блюд и необходимых ингредиентов к ним. Напишите программу, 
которая будет определять что вы можете приготовить с имеющимися ингредиентами.
Входные данные
На первой строке вводится список имеющихся ингредиентов. Ингредиенты не повторяются.
На второй вводится количество блюд. 
Затем на одной строке вводится название блюда, на другой ингредиенты через 
пробел и так столько раз, сколько блюд.
Выходные данные
Вывести названия блюд в том порядке, в котором они были представлены через пробел.
Примечание
Пояснение к примеру, первое блюдо "бутерброд", мы можем его приготовить, 
используются "масло хлеб", таким образом из ингредиентов осталась только "вода". 
"бутерброд с икрой" приготовить не можем, "коктейль из воды" можем. 
На этом ингредиенты закончились.
"""
all_ingredients = input().split()
N = int(input())
for i in range(N):
    dish_name = input()
    ingredients = input().split()
    if set(ingredients) <= set(all_ingredients):
        print(dish_name, end=' ')
        all_ingredients = set(all_ingredients).difference(set(ingredients))

"""
Напишите программу которая выводит сколько раз встречалось слово в строке.
Входные данные
Вводится строка.
Выходные данные
Для каждого слова вывести сколько раз оно встречалось в тексте.
"""
stroka = input().split()
a = []
for i in stroka:
    b = stroka.count(i)
    a.append(b)
print(' '.join(str(i) for i in a))

stroka = input().split()
d = {x: stroka.count(x) for x in set(stroka)}
for i in stroka:
    print(d[i], end=' ')

stroka = input().split()
dict = {}
for i in stroka:
    if i in dict:
        dict[i]+=1
    else:
        dict[i] = 1
for i in stroka:
    print(dict[i], end=' ')
